/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PageInfoPanel.java
 *
 * Created on Dec 6, 2011, 11:31:13 PM
 */
package websiteschema.analyzer.browser.bottom;

import com.webrenderer.swing.dom.IDocument;
import java.util.Set;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import websiteschema.analyzer.context.BrowserContext;
import websiteschema.model.domain.Cipher;
import websiteschema.persistence.rdbms.CipherMapper;
import websiteschema.utils.StringUtil;

/**
 *
 * @author ray
 */
public class PageInfoPanel extends javax.swing.JPanel {

    BrowserContext context;
    ButtonGroup group;
    String cookie;

    /** Creates new form PageInfoPanel */
    public PageInfoPanel() {
        initComponents();
        group = new ButtonGroup();
        group.add(responseRadioButton);
        group.add(requestRadioButton);
        responseRadioButton.setSelected(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        charsetField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        urlArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        MIMEArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        contentTypeField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        sessionField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        cookieArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        contentTypeFilterField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        responseRadioButton = new javax.swing.JRadioButton();
        requestRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        saveCookieButton = new javax.swing.JButton();

        jLabel1.setText("Charset:");

        charsetField.setText("UTF-8");

        urlArea.setColumns(20);
        urlArea.setEditable(false);
        urlArea.setRows(5);
        urlArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                urlAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(urlArea);

        jLabel3.setText("URL:");

        MIMEArea.setColumns(20);
        MIMEArea.setEditable(false);
        MIMEArea.setRows(5);
        jScrollPane2.setViewportView(MIMEArea);

        jLabel4.setText("Content-Type: ");

        contentTypeField.setText("text/html");

        jLabel5.setText("SessionID:");

        cookieArea.setColumns(20);
        cookieArea.setRows(5);
        jScrollPane3.setViewportView(cookieArea);

        jLabel6.setText("Cookie:");

        jLabel7.setText("(  Filter:");

        contentTypeFilterField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentTypeFilterFieldActionPerformed(evt);
            }
        });

        jLabel8.setText(")");

        responseRadioButton.setText("Response");
        responseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responseRadioButtonActionPerformed(evt);
            }
        });

        requestRadioButton.setText("Request");
        requestRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestRadioButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Header");

        saveCookieButton.setText("保存Cookie");
        saveCookieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCookieButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(charsetField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contentTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(2, 2, 2)
                        .addComponent(sessionField, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel7)
                                .addGap(14, 14, 14)
                                .addComponent(contentTypeFilterField, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(responseRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(requestRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                                .addComponent(saveCookieButton))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))))
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(699, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(charsetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(contentTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(sessionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(contentTypeFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(responseRadioButton)
                    .addComponent(requestRadioButton)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(saveCookieButton))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void urlAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_urlAreaMouseClicked
        // TODO add your handling code here:
        selectLine();
    }//GEN-LAST:event_urlAreaMouseClicked

    private void selectLine() {
        String text = urlArea.getText();
        if (!"".equals(text)) {
            int pos = urlArea.getCaretPosition();
            int start = text.lastIndexOf("\n", pos);
            start = start >= 0 ? start : 0;
            int end = text.indexOf("\n", pos);
            String url = text.substring(start, end).trim();
            if (responseRadioButton.isSelected()) {
                this.MIMEArea.setText(context.getResponseHeader(url));
            } else {
                this.MIMEArea.setText(context.getRequestHeader(url));
            }
            updateCookie(url);
            this.cookieArea.setCaretPosition(0);
            this.MIMEArea.setCaretPosition(0);
        }
    }

    private void contentTypeFilterFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentTypeFilterFieldActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_contentTypeFilterFieldActionPerformed

    private void requestRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestRadioButtonActionPerformed
        // TODO add your handling code here:
        selectLine();
    }//GEN-LAST:event_requestRadioButtonActionPerformed

    private void responseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responseRadioButtonActionPerformed
        // TODO add your handling code here:
        selectLine();
    }//GEN-LAST:event_responseRadioButtonActionPerformed

    private void saveCookieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCookieButtonActionPerformed
        // TODO add your handling code here:
        if (StringUtil.isNotEmpty(cookie)) {
            String siteId = context.getSimpleBrowser().getAnalysisPanel().getSiteId();
            if (StringUtil.isNotEmpty(siteId)) {
                CipherMapper cipherMapper = BrowserContext.getSpringContext().getBean("cipherMapper", CipherMapper.class);
                Cipher cipher = cipherMapper.getBySiteId(siteId);
                if (null != cipher) {
                    cipher.setCookie(cookie);
                    cipherMapper.update(cipher);
                    JOptionPane.showMessageDialog(this.getParent(), "成功更新cookie！");
                } else {
                    cipher = new Cipher();
                    cipher.setSiteId(siteId);
                    cipher.setCookie(cookie);
                    cipherMapper.insert(cipher);
                    JOptionPane.showMessageDialog(this.getParent(), "成功添加cookie！");
                }
            } else {
                JOptionPane.showMessageDialog(this.getParent(), "siteId是空或无效！");
            }
        } else {
            JOptionPane.showMessageDialog(this.getParent(), "Cookie是空或无效！");
        }
    }//GEN-LAST:event_saveCookieButtonActionPerformed

    public void clean() {
        this.urlArea.setText("");
        this.MIMEArea.setText("");
        this.cookieArea.setText("");
        this.sessionField.setText("");
        this.charsetField.setText("");
        this.contentTypeField.setText("");
    }

    public void update() {
        clean();
        IDocument doc = context.getBrowser().getDocument();
        String charset = doc.getCharSet();
        this.charsetField.setText(charset);

        Set<String> urls = context.getURLAndMIME().keySet();

        String contentTypeFilter = this.contentTypeFilterField.getText();
        for (String url : urls) {
            boolean append = true;
            if (!"".equals(contentTypeFilter)) {
                if (url.indexOf(contentTypeFilter) < 0) {
                    append = false;
                }
            }
            if (append) {
                this.urlArea.append(url);
                this.urlArea.append("\n");
            }
        }
        String url = getLine(urlArea, 0);
        if (responseRadioButton.isSelected()) {
            this.MIMEArea.setText(context.getResponseHeader(url));
        } else {
            this.MIMEArea.setText(context.getRequestHeader(url));
        }
        updateCookie(url);
        this.cookieArea.setCaretPosition(0);
        this.urlArea.setCaretPosition(0);
        this.MIMEArea.setCaretPosition(0);
    }

    private void updateCookie(String url) {
        cookie = null;
        cookieArea.setText("");
        String headers = context.getRequestHeader(url);
        String lines[] = headers.split("\n");
        for (String line : lines) {
            if (line.startsWith("Cookie:")) {
                cookie = line.replaceAll("^Cookie:", "");
                if (null != cookie) {
                    String cookies[] = cookie.split(";");
                    for (String c : cookies) {
                        String temp = c.toLowerCase();
                        if (temp.contains("session")) {
                            this.sessionField.setText(c);
                        }
                        this.cookieArea.append(c.trim());
                        this.cookieArea.append(";\n");
                    }
                }
            }
        }
    }

    private String getLine(javax.swing.JTextArea area, int line) {
        try {
            int start = area.getLineStartOffset(line);
            int end = area.getLineEndOffset(line);
            return area.getText(start, end).trim();
        } catch (Exception ex) {
            return "";
        }
    }

    public void setContext(BrowserContext context) {
        this.context = context;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea MIMEArea;
    private javax.swing.JTextField charsetField;
    private javax.swing.JTextField contentTypeField;
    private javax.swing.JTextField contentTypeFilterField;
    private javax.swing.JTextArea cookieArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton requestRadioButton;
    private javax.swing.JRadioButton responseRadioButton;
    private javax.swing.JButton saveCookieButton;
    private javax.swing.JTextField sessionField;
    private javax.swing.JTextArea urlArea;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ResultViewPanel.java
 *
 * Created on Jul 10, 2012, 5:34:28 PM
 */
package websiteschema.analyzer.browser.left;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;
import websiteschema.analyzer.context.BrowserContext;
import websiteschema.model.domain.UrlLink;
import websiteschema.persistence.Mapper;
import websiteschema.utils.DateUtil;
import websiteschema.utils.UrlLinkUtil;

/**
 *
 * @author ray
 */
public class ResultViewPanel extends javax.swing.JPanel {

    /** Creates new form ResultViewPanel */
    public ResultViewPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        urlField = new javax.swing.JTextField();
        checkButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jToolBar1.setRollover(true);

        jLabel1.setText("URL: ");
        jToolBar1.add(jLabel1);
        jToolBar1.add(urlField);

        checkButton.setText("查看");
        checkButton.setFocusable(false);
        checkButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        checkButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(checkButton);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        checkButton.setEnabled(false);
        try {
            // TODO add your handling code here:
            Mapper<UrlLink> mapper = BrowserContext.getSpringContext().getBean("urlLinkMapper", Mapper.class);
            String rowKey = UrlLinkUtil.getInstance().convertUrlToRowKey(new URL(getUrl()));
            UrlLink urlLink = mapper.get(rowKey);
            if (null != urlLink) {
                StringBuilder text = new StringBuilder();
                text.append("Jobname: ").append(urlLink.getJobname()).append(" ");
                text.append("URL Status: ").append(urlLink.getStatus()).append("\n");
                text.append("Parent Link: ").append(urlLink.getParent()).append("\n");
                text.append("Create Time: ").append(DateUtil.format(urlLink.getCreateTime(), "yyyy-MM-dd HH:mm:SS")).append("\n");
                text.append("Update Time: ").append(DateUtil.format(urlLink.getLastUpdateTime(), "yyyy-MM-dd HH:mm:SS")).append("\n");
                text.append("Content:\n").append(urlLink.getContent());
                setText(text.toString());
            } else {
                setText("目前仍未采集到指定的URL！");
            }
        } catch (Exception ex) {
            setText(ex.getMessage());
        } finally {
            checkButton.setEnabled(true);
        }
    }//GEN-LAST:event_checkButtonActionPerformed

    public String getUrl() {
        return this.urlField.getText();
    }

    public void setUrl(String url) {
        this.urlField.setText(url);
    }

    public void setText(String text) {
        this.jTextArea1.setText(text);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField urlField;
    // End of variables declaration//GEN-END:variables
}

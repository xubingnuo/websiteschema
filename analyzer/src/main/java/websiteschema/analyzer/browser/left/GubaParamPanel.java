/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GubaParamPanel.java
 *
 * Created on Feb 20, 2012, 4:25:25 PM
 */
package websiteschema.analyzer.browser.left;

import java.io.IOException;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.w3c.dom.Document;
import websiteschema.analyzer.context.BrowserContext;
import websiteschema.cluster.analyzer.AnalysisResult;
import websiteschema.cluster.analyzer.fields.BBSThreadExtractor;
import websiteschema.cluster.analyzer.fields.StandardExtractor;
import websiteschema.cluster.analyzer.fields.TitleAnalyzer;
import websiteschema.cluster.analyzer.fields.XPathExtractor;
import websiteschema.model.domain.Websiteschema;
import websiteschema.persistence.Mapper;
import websiteschema.utils.CollectionUtil;

/**
 *
 * @author ray
 */
public class GubaParamPanel extends javax.swing.JPanel implements ISiteAnalyzer {

    BrowserContext context;
    IConfigureHandler confHandler;
    String siteId;
    Websiteschema schema;
    TitleAnalyzer titleAnalyzer = new TitleAnalyzer();
    BBSThreadExtractor threadsExtractor = new BBSThreadExtractor();
    StandardExtractor commentsExtractor = new StandardExtractor();
    StandardExtractor clicksExtractor = new StandardExtractor();
    XPathExtractor chnlExtractor = new XPathExtractor();
    AnalysisResult ar = new AnalysisResult();

    /**
     * Creates new form GubaParamPanel
     */
    public GubaParamPanel() {
        initComponents();
        titleAnalyzer.setFieldName("TITLE");
        threadsExtractor.setFieldName("THREADS");
        commentsExtractor.setFieldName("COMMENT_COUNT");
        clicksExtractor.setFieldName("CLICK_COUNT");
        chnlExtractor.setFieldName("CHANNEL");
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        siteIdField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        titleResultField = new javax.swing.JTextField();
        titleXPathField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        titlePrefixField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        titleSuffixField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contentTextArea = new javax.swing.JTextArea();
        testButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        clickXPathField = new javax.swing.JTextField();
        clickResultField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        commentXPathField = new javax.swing.JTextField();
        commentResultField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        clickPrefixField = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        clickSuffixField = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        commentPrefixField = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        commentSuffixField = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        clickRegexField = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        commentRegexField = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        threadDateFormatField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        threadDatePatternField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        threadDateXPathField = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        threadAuthorXPathField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        threadAuthorPrefixField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        threadAuthorSuffixField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        threadContentXPathField = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        threadContentPrefixField = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        threadContentSuffixField = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        threadXPathField = new javax.swing.JTextField();
        GetAreaXPathCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        subjectXPathField = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        subjectDatePatternField = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        subjectDateFormatField = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        subjectDateXPathField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel42 = new javax.swing.JLabel();
        subjectAuthorXPathField = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        subjectAuthorPrefixField = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        subjectAuthorSuffixField = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel46 = new javax.swing.JLabel();
        subjectContentXPathField = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        subjectContentPrefixField = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        subjectContentSuffixField = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        channelResultField = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        channelXPathField = new javax.swing.JTextField();

        jLabel1.setText("网站Id:");

        siteIdField.setEditable(false);

        jLabel2.setText("标题:");

        jLabel3.setText("标题XPath:");

        jLabel4.setText("标题开始位置:");

        jLabel5.setText("标题结束位置:");

        jLabel19.setText("结果:");

        contentTextArea.setColumns(20);
        contentTextArea.setRows(5);
        jScrollPane1.setViewportView(contentTextArea);

        testButton.setText("测试");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        saveButton.setText("保存");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel21.setText("状态:");

        jLabel16.setText("XPath:");

        jLabel18.setText("XPath:");

        jLabel17.setText("回复量:");

        jLabel15.setText("点击量:");

        jLabel26.setText("抽取规则:");

        jLabel27.setText("(Prefix)");

        jLabel28.setText("(Suffix)");

        jLabel29.setText("抽取规则:");

        jLabel30.setText("(Prefix)");

        jLabel31.setText("(Suffix)");

        jLabel32.setText("Regex");

        jLabel33.setText("Regex");

        jPanel1.setName("threads"); // NOI18N

        jLabel9.setText("时间XPath:");

        jLabel8.setText("目标格式:");

        threadDateFormatField.setText("yyyy-MM-dd HH:mm:SS");

        jLabel7.setText("模式:");

        jLabel6.setText("发布时间:");

        jLabel11.setText("作者XPath:");

        jLabel12.setText("抽取规则:");

        jLabel13.setText("(Prefix)");

        jLabel14.setText("(Suffix)");

        jLabel20.setText("内容XPath:");

        jLabel23.setText("抽取规则:");

        jLabel24.setText("(Prefix)");

        jLabel25.setText("(Suffix)");

        jLabel34.setText("区域XPath:");

        GetAreaXPathCheckBox.setText("所有Thread含于同一XPath");
        GetAreaXPathCheckBox.setToolTipText("所有Thread包含在同一XPath中，无法分别获取每个Thread中的结点信息");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(threadDateXPathField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(threadAuthorXPathField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(threadAuthorPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(threadAuthorSuffixField))
                    .addComponent(jSeparator4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(threadContentXPathField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addGap(6, 6, 6)
                        .addComponent(threadContentPrefixField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(threadContentSuffixField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(threadDatePatternField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(threadDateFormatField, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(threadXPathField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GetAreaXPathCheckBox)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(threadXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GetAreaXPathCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(threadDateFormatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threadDatePatternField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(threadDateXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threadAuthorXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(threadAuthorPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(threadAuthorSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(threadContentXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(threadContentPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(threadContentSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(43, 43, 43))
        );

        jTabbedPane1.addTab("Threads", jPanel1);

        jLabel36.setText("区域XPath:");

        jLabel37.setText("发布时间:");

        jLabel38.setText("模式:");

        jLabel39.setText("目标格式:");

        subjectDateFormatField.setText("yyyy-MM-dd HH:mm:SS");

        jLabel40.setText("时间XPath:");

        jLabel42.setText("作者XPath:");

        jLabel43.setText("抽取规则:");

        jLabel44.setText("(Prefix)");

        jLabel45.setText("(Suffix)");

        jLabel46.setText("内容XPath:");

        jLabel47.setText("抽取规则:");

        jLabel48.setText("(Prefix)");

        jLabel49.setText("(Suffix)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectXPathField, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel40))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(subjectDatePatternField, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(subjectDateFormatField, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                            .addComponent(subjectDateXPathField)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectAuthorXPathField, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectAuthorPrefixField, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectAuthorSuffixField, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectContentXPathField))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectContentPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectContentSuffixField, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(subjectXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(subjectDatePatternField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectDateFormatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(subjectDateXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectAuthorXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel44)
                    .addComponent(subjectAuthorPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(subjectAuthorSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(subjectContentXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(jLabel48)
                    .addComponent(subjectContentPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49)
                    .addComponent(subjectContentSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Subject", jPanel2);

        jLabel22.setText("栏目:");

        jLabel35.setText("XPath:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(titlePrefixField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleSuffixField))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(siteIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(titleXPathField)
                            .addComponent(titleResultField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clickPrefixField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clickSuffixField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clickRegexField))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(commentResultField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clickResultField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clickXPathField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commentXPathField))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(commentPrefixField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(commentSuffixField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(commentRegexField))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(32, 32, 32)
                        .addComponent(channelResultField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(channelXPathField))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(testButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(siteIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(titleResultField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(titlePrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(clickResultField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(clickXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(clickPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(clickSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(clickRegexField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(commentResultField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(commentXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(commentPrefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(commentSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(commentRegexField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(channelResultField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(channelXPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(saveButton)
                    .addComponent(testButton)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        // TODO add your handling code here:
        new Thread(new Foo()).start();
    }//GEN-LAST:event_testButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        this.statusLabel.setText("正在保存设置");
        ar.setFieldAnalysisResult(getClusterName(), titleAnalyzer.getFieldName(), titleAnalyzer.getClass().getName(), getTitleConfig());

        ar.setFieldExtractorSetting(getClusterName(),
                commentsExtractor.getFieldName(),
                commentsExtractor.getClass().getName(),
                getStandardExtractorConfig(commentXPathField, commentPrefixField, commentSuffixField, commentRegexField));
        ar.setFieldExtractorSetting(getClusterName(),
                clicksExtractor.getFieldName(),
                clicksExtractor.getClass().getName(),
                getStandardExtractorConfig(clickXPathField, clickPrefixField, clickSuffixField, clickRegexField));
        ar.setFieldExtractorSetting(getClusterName(),
                chnlExtractor.getFieldName(),
                chnlExtractor.getClass().getName(),
                getXPathExtractorConfig(channelXPathField));
        ar.setFieldExtractorSetting(getClusterName(),
                threadsExtractor.getFieldName(),
                threadsExtractor.getClass().getName(),
                getThreadExtractorConfig());
        this.confHandler.setProperties(ar.getResult());
        this.confHandler.save();
        this.statusLabel.setText("保存完毕");
        JOptionPane.showMessageDialog(this, "Crawler设置保存成功！");
    }//GEN-LAST:event_saveButtonActionPerformed

    class Foo implements Runnable {

        @Override
        public void run() {
            testButton.setEnabled(false);
            saveButton.setEnabled(false);
            try {
                statusLabel.setText("正在分析页面");
                extractAndDisplayTitle(getTitleConfig());

                extractAndDisplayStandardExtractor(commentsExtractor,
                        getStandardExtractorConfig(commentXPathField, commentPrefixField, commentSuffixField, commentRegexField),
                        commentResultField, commentXPathField, commentPrefixField, commentSuffixField, commentRegexField);
                extractAndDisplayStandardExtractor(clicksExtractor,
                        getStandardExtractorConfig(clickXPathField, clickPrefixField, clickSuffixField, clickRegexField),
                        clickResultField, clickXPathField, clickPrefixField, clickSuffixField, clickRegexField);
                extractAndDisplayXPathExtractor(chnlExtractor, getXPathExtractorConfig(channelXPathField), channelResultField, channelXPathField);

                extractAndDisplayThread(getThreadExtractorConfig());
                statusLabel.setText("分析完毕");
            } finally {
                testButton.setEnabled(true);
                saveButton.setEnabled(true);
            }
        }
    }

    private Map<String, String> getTitleConfig() {
        Map<String, String> conf = new HashMap<String, String>();
        put(TitleAnalyzer.xpathKey, titleXPathField.getText(), conf);
        put(TitleAnalyzer.prefixKey, titlePrefixField.getText(), conf);
        put(TitleAnalyzer.suffixKey, titleSuffixField.getText(), conf);
        return conf;
    }

    private Map<String, String> getStandardExtractorConfig(JTextField xpath, JTextField prefix, JTextField suffix, JTextField regex) {
        Map<String, String> conf = new HashMap<String, String>();
        put(StandardExtractor.xpathKey, xpath.getText(), conf);
        put(StandardExtractor.prefixKey, prefix.getText(), conf);
        put(StandardExtractor.suffixKey, suffix.getText(), conf);
        put(StandardExtractor.regexKey, regex.getText(), conf);
        return conf;
    }

    private Map<String, String> getThreadExtractorConfig() {
        Map<String, String> conf = new HashMap<String, String>();
        put(BBSThreadExtractor.THREAD_AREA_XPATH_KEY, threadXPathField.getText(), conf);
        put(BBSThreadExtractor.THREAD_DATE_XPATH_KEY, threadDateXPathField.getText(), conf);
        put(BBSThreadExtractor.THREAD_DATE_FORMAT_KEY, threadDateFormatField.getText(), conf);
        put(BBSThreadExtractor.THREAD_DATE_PATTERN_KEY, threadDatePatternField.getText(), conf);
        put(BBSThreadExtractor.THREAD_AUTHOR_XPATH_KEY, threadAuthorXPathField.getText(), conf);
        put(BBSThreadExtractor.THREAD_AUTHOR_PREFIX_KEY, threadAuthorPrefixField.getText(), conf);
        put(BBSThreadExtractor.THREAD_AUTHOR_SUFFIX_KEY, threadAuthorSuffixField.getText(), conf);
        put(BBSThreadExtractor.THREAD_CONTENT_XPATH_KEY, threadContentXPathField.getText(), conf);
        put(BBSThreadExtractor.THREAD_CONTENT_PREFIX_KEY, threadContentPrefixField.getText(), conf);
        put(BBSThreadExtractor.THREAD_CONTENT_SUFFIX_KEY, threadContentSuffixField.getText(), conf);
        put(BBSThreadExtractor.GET_AREA_XPATH_KEY, String.valueOf(GetAreaXPathCheckBox.isSelected()), conf);
        put(BBSThreadExtractor.SUBJECT_AREA_XPATH_KEY, subjectXPathField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_DATE_XPATH_KEY, subjectDateXPathField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_DATE_FORMAT_KEY, subjectDateFormatField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_DATE_PATTERN_KEY, subjectDatePatternField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_AUTHOR_XPATH_KEY, subjectAuthorXPathField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_AUTHOR_PREFIX_KEY, subjectAuthorPrefixField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_AUTHOR_SUFFIX_KEY, subjectAuthorSuffixField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_CONTENT_XPATH_KEY, subjectContentXPathField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_CONTENT_PREFIX_KEY, subjectContentPrefixField.getText(), conf);
        put(BBSThreadExtractor.SUBJECT_CONTENT_SUFFIX_KEY, subjectContentSuffixField.getText(), conf);
        return conf;
    }

    private Map<String, String> getXPathExtractorConfig(JTextField xpath) {
        Map<String, String> conf = new HashMap<String, String>();
        put(StandardExtractor.xpathKey, xpath.getText(), conf);
        return conf;
    }

    private void put(String key, String value, Map<String, String> map) {
        if (null != map) {
            if (null != key && !"".equals(key)) {
                if (null != value && !"".equals(value)) {
                    map.put(key, value);
                }
            }
        }
    }

    private String get(Map<String, String> map, String key) {
        if (null != map) {
            if (null != key && !"".equals(key)) {
                String value = map.get(key);
                if (null != value) {
                    return value;
                }
            }
        }
        return "";
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox GetAreaXPathCheckBox;
    private javax.swing.JTextField channelResultField;
    private javax.swing.JTextField channelXPathField;
    private javax.swing.JTextField clickPrefixField;
    private javax.swing.JTextField clickRegexField;
    private javax.swing.JTextField clickResultField;
    private javax.swing.JTextField clickSuffixField;
    private javax.swing.JTextField clickXPathField;
    private javax.swing.JTextField commentPrefixField;
    private javax.swing.JTextField commentRegexField;
    private javax.swing.JTextField commentResultField;
    private javax.swing.JTextField commentSuffixField;
    private javax.swing.JTextField commentXPathField;
    private javax.swing.JTextArea contentTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField siteIdField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField subjectAuthorPrefixField;
    private javax.swing.JTextField subjectAuthorSuffixField;
    private javax.swing.JTextField subjectAuthorXPathField;
    private javax.swing.JTextField subjectContentPrefixField;
    private javax.swing.JTextField subjectContentSuffixField;
    private javax.swing.JTextField subjectContentXPathField;
    private javax.swing.JTextField subjectDateFormatField;
    private javax.swing.JTextField subjectDatePatternField;
    private javax.swing.JTextField subjectDateXPathField;
    private javax.swing.JTextField subjectXPathField;
    private javax.swing.JButton testButton;
    private javax.swing.JTextField threadAuthorPrefixField;
    private javax.swing.JTextField threadAuthorSuffixField;
    private javax.swing.JTextField threadAuthorXPathField;
    private javax.swing.JTextField threadContentPrefixField;
    private javax.swing.JTextField threadContentSuffixField;
    private javax.swing.JTextField threadContentXPathField;
    private javax.swing.JTextField threadDateFormatField;
    private javax.swing.JTextField threadDatePatternField;
    private javax.swing.JTextField threadDateXPathField;
    private javax.swing.JTextField threadXPathField;
    private javax.swing.JTextField titlePrefixField;
    private javax.swing.JTextField titleResultField;
    private javax.swing.JTextField titleSuffixField;
    private javax.swing.JTextField titleXPathField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setSiteId(String siteId) {
        this.siteId = siteId;
        this.siteIdField.setText(siteId);
        Mapper<Websiteschema> mapper = BrowserContext.getSpringContext().getBean("websiteschemaMapper", Mapper.class);
        this.schema = mapper.get(siteId);
    }

    @Override
    public String getSiteId() {
        return siteId;
    }

    @Override
    public void setBrowserContext(BrowserContext context) {
        this.context = context;
    }

    @Override
    public void setConfigureHandler(IConfigureHandler confHandler) {
        this.confHandler = confHandler;
    }

    @Override
    public void start() {
        new Thread(new FooThread()).start();
    }

    class FooThread implements Runnable {

        @Override
        public void run() {
            init();
        }
    };

    public void init() {
        this.testButton.setEnabled(false);
        this.saveButton.setEnabled(false);
        this.statusLabel.setText("正在分析页面");
        analysis();
        this.statusLabel.setText("分析完毕");
        this.testButton.setEnabled(true);
        this.saveButton.setEnabled(true);
    }

    private void analysis() {
        try {
            initProp();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private String getClusterName() {
        return AnalysisResult.DefaultClusterName;
    }

    private Document getDocument() {
        Document doc = (Document) context.getBrowser().getW3CDocument();
        return doc;
    }

    private String getDocumentSource() {
        return context.getBrowser().getDocument().getDocumentSource();
    }

    /**
     * 根据配置刷新页面上的内容
     *
     * @throws IOException
     */
    private void initProp() throws IOException {
        Map<String, String> prop = this.confHandler.getProperties(); //获取当前的配置
        //初始化参数
        ar.init(prop);
        //设置各个字段的内容
        refresh();
    }

    /**
     * 设置页面上各个控件的值
     */
    private void refresh() {
        setTitle(ar.getFieldAnalysisResult(getClusterName(), titleAnalyzer.getFieldName()));

        //设置XPATH属性
        threadsExtractor.setXPathAttr(schema.getXpathAttr());
        setThreadExtractor(ar.getFieldExtractorConfig(getClusterName(), threadsExtractor.getFieldName()));

        setStandardExtractor(commentsExtractor,
                ar.getFieldExtractorConfig(getClusterName(), commentsExtractor.getFieldName()),
                commentResultField, commentXPathField, commentPrefixField, commentSuffixField, commentRegexField);
        setStandardExtractor(clicksExtractor,
                ar.getFieldExtractorConfig(getClusterName(), clicksExtractor.getFieldName()),
                clickResultField, clickXPathField, clickPrefixField, clickSuffixField, clickRegexField);
        setXPathExtractor(chnlExtractor,
                ar.getFieldExtractorConfig(getClusterName(), chnlExtractor.getFieldName()),
                channelResultField, channelXPathField);

    }

    private void setThreadExtractor(List<Map<String, String>> params) {
        if (null != params) {
            for (Map<String, String> map : params) {
                extractAndDisplayThread(map);
                break;//股吧只有一种参数
            }
        }
    }

    private void extractAndDisplayThread(Map<String, String> map) {
        setThreadConfig(map);
        final BBSThreadExtractor ext = threadsExtractor;
        ext.init(map);
        Collection<Map<String, String>> res = ext.extractExtData(getDocument(), getDocumentSource());
        if (null != res) {
            this.contentTextArea.setText("");
            StringBuilder sb = new StringBuilder();
            for (Map<String, String> thread : res) {
                String content = thread.get("CONTENT");
                String date = thread.get("DATE");
                String author = thread.get("AUTHOR");
                
                sb.append("-------------------\n");
                sb.append("author: ").append(author).append("\n");
                sb.append("date: ").append(date).append("\n");
                sb.append("content:\n").append(content).append("\n");
            }
            this.contentTextArea.setText(sb.toString());
        }
    }

    private void setThreadConfig(Map<String, String> map) {
        threadXPathField.setText(get(map, BBSThreadExtractor.THREAD_AREA_XPATH_KEY));
        threadDateXPathField.setText(get(map, BBSThreadExtractor.THREAD_DATE_XPATH_KEY));
        threadDateFormatField.setText(get(map, BBSThreadExtractor.THREAD_DATE_FORMAT_KEY));
        threadDatePatternField.setText(get(map, BBSThreadExtractor.THREAD_DATE_PATTERN_KEY));
        threadAuthorXPathField.setText(get(map, BBSThreadExtractor.THREAD_AUTHOR_XPATH_KEY));
        threadAuthorPrefixField.setText(get(map, BBSThreadExtractor.THREAD_AUTHOR_PREFIX_KEY));
        threadAuthorSuffixField.setText(get(map, BBSThreadExtractor.THREAD_AUTHOR_SUFFIX_KEY));
        threadContentXPathField.setText(get(map, BBSThreadExtractor.THREAD_CONTENT_XPATH_KEY));
        threadContentPrefixField.setText(get(map, BBSThreadExtractor.THREAD_CONTENT_PREFIX_KEY));
        threadContentSuffixField.setText(get(map, BBSThreadExtractor.THREAD_CONTENT_SUFFIX_KEY));
        GetAreaXPathCheckBox.setSelected(threadsExtractor.isGetAreaXPath());
        subjectXPathField.setText(get(map, BBSThreadExtractor.SUBJECT_AREA_XPATH_KEY));
        subjectDateXPathField.setText(get(map, BBSThreadExtractor.SUBJECT_DATE_XPATH_KEY));
        subjectDateFormatField.setText(get(map, BBSThreadExtractor.SUBJECT_DATE_FORMAT_KEY));
        subjectDatePatternField.setText(get(map, BBSThreadExtractor.SUBJECT_DATE_PATTERN_KEY));
        subjectAuthorXPathField.setText(get(map, BBSThreadExtractor.SUBJECT_AUTHOR_XPATH_KEY));
        subjectAuthorPrefixField.setText(get(map, BBSThreadExtractor.SUBJECT_AUTHOR_PREFIX_KEY));
        subjectAuthorSuffixField.setText(get(map, BBSThreadExtractor.SUBJECT_AUTHOR_SUFFIX_KEY));
        subjectContentXPathField.setText(get(map, BBSThreadExtractor.SUBJECT_CONTENT_XPATH_KEY));
        subjectContentPrefixField.setText(get(map, BBSThreadExtractor.SUBJECT_CONTENT_PREFIX_KEY));
        subjectContentSuffixField.setText(get(map, BBSThreadExtractor.SUBJECT_CONTENT_SUFFIX_KEY));

    }

    private void setTitle(List<Map<String, String>> params) {
        if (null != params) {
            for (Map<String, String> map : params) {
                Collection<String> set = extractAndDisplayTitle(map);
                if (null != set && !set.isEmpty()) {
                    break;
                }
            }
        }
    }

    private Collection<String> extractAndDisplayTitle(Map<String, String> map) {
        titleAnalyzer.init(map);
        Collection<String> set = titleAnalyzer.extract(getDocument(), getDocumentSource());
        if (null != set && !set.isEmpty()) {
            this.titleResultField.setText(set.iterator().next());
            this.titleXPathField.setText(map.get(TitleAnalyzer.xpathKey));
            this.titlePrefixField.setText(map.get(TitleAnalyzer.prefixKey));
            this.titleSuffixField.setText(map.get(TitleAnalyzer.suffixKey));
        }
        return set;
    }

    private void setStandardExtractor(StandardExtractor extractor, List<Map<String, String>> params,
            JTextField valueField, JTextField xpathField, JTextField prefixField, JTextField suffixField, JTextField regexField) {
        if (null != params && null != extractor) {
            for (Map<String, String> map : params) {
                Collection<String> set = extractAndDisplayStandardExtractor(extractor, map, valueField, xpathField, prefixField, suffixField, regexField);
                if (null != set && !set.isEmpty()) {
                    break;
                }
            }
        }
    }

    private Collection<String> extractAndDisplayStandardExtractor(StandardExtractor extractor, Map<String, String> map,
            JTextField valueField, JTextField xpathField, JTextField prefixField, JTextField suffixField, JTextField regexField) {
        extractor.init(map);
        Collection<String> set = extractor.extract(getDocument(), getDocumentSource());
        if (null != set && !set.isEmpty()) {
            valueField.setText(CollectionUtil.toString(set));
            xpathField.setText(map.get(StandardExtractor.xpathKey));
            prefixField.setText(map.get(StandardExtractor.prefixKey));
            suffixField.setText(map.get(StandardExtractor.suffixKey));
            regexField.setText(map.get(StandardExtractor.regexKey));
        }
        return set;
    }

    private void setXPathExtractor(XPathExtractor extractor, List<Map<String, String>> params,
            JTextField valueField, JTextField xpathField) {
        if (null != params && null != extractor) {
            for (Map<String, String> map : params) {
                Collection<String> set = extractAndDisplayXPathExtractor(extractor, map, valueField, xpathField);
                if (null != set && !set.isEmpty()) {
                    break;
                }
            }
        }
    }

    private Collection<String> extractAndDisplayXPathExtractor(XPathExtractor extractor, Map<String, String> map,
            JTextField valueField, JTextField xpathField) {
        extractor.init(map);
        Collection<String> set = extractor.extract(getDocument(), getDocumentSource());
        if (null != set && !set.isEmpty()) {
            valueField.setText(CollectionUtil.toString(set));
            xpathField.setText(map.get(XPathExtractor.xpathKey));
        }
        return set;
    }
}

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="websiteschema.persistence.rdbms.WeiboMapper">

    <cache />

    <sql id='weiboColumns'>id, userId, siteId, passwd, status, createTime, createUser, updateTime, lastUpdateUser</sql>

    <select id="getTotalResults" resultType="long" parameterType="java.util.Map">
        select count(*) from Weibo
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="match != null">
                userId like CONCAT('%','${match}','%' )
            </if>
        </trim>
    </select>

    <select id="getResults" parameterType="java.util.Map" resultType="websiteschema.model.domain.weibo.Weibo">
        select * from Weibo
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="match != null">
                userId like CONCAT('%','${match}','%' )
            </if>
        </trim>
        <if test="sort != null">
            order by ${sort}
        </if>
        limit #{start}, #{limit}
    </select>

    <!-- 查询记录，根据Id -->
    <select id="getById" parameterType="long" resultType="websiteschema.model.domain.weibo.Weibo">
        select * from Weibo
        where id = #{id}
    </select>

    <!-- 插入记录 -->
    <insert id="insert" parameterType="websiteschema.model.domain.weibo.Weibo"
        useGeneratedKeys="true" keyProperty="id">
        insert into Weibo (userId, siteId, passwd, status, createTime, createUser, updateTime, lastUpdateUser)
        values (#{userId},#{siteId},#{passwd},#{status},#{createTime},#{createUser},#{updateTime},#{lastUpdateUser})
    </insert>

    <!-- 更新任务状态记录 -->
    <update id="update" parameterType="websiteschema.model.domain.weibo.Weibo">
        update Weibo set
        userId = #{userId},
        siteId = #{siteId},
        passwd = #{passwd},
        status = #{status},
        createTime = #{createTime},
        createUser = #{createUser},
        updateTime = #{updateTime},
        lastUpdateUser = #{lastUpdateUser}
        where id = #{id}
    </update>

    <delete id="delete" parameterType="websiteschema.model.domain.weibo.Weibo" >
        delete from Weibo
        where id = #{id}
    </delete>

    <delete id="deleteById" parameterType="long" >
        delete from Weibo
        where id = #{id}
    </delete>
    
</mapper>  